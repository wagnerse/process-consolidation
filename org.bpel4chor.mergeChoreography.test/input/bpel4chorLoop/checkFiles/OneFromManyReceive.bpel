<?xml version="1.0" encoding="UTF-8"?>
<process
    abstractProcessProfile="urn:HPI_IAAS:choreography:profile:2006/12"
    exitOnStandardFault="yes" name="ProcessMerged"
    suppressJoinFailure="yes"
    targetNamespace="http://www.iaas.uni-stuttgart.de"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/abstract" xmlns:ns="http://www.iaas.uni-stuttgart.de">
    <import importType="http://schemas.xmlsoap.org/wsdl/"
        location="Airline.wsdl" namespace="http://www.iaas.uni-stuttgart.de"/>
    <import importType="http://schemas.xmlsoap.org/wsdl/"
        location="Agency.wsdl" namespace="http://www.iaas.uni-stuttgart.de"/>
    <variables>
        <variable messageType="ns:RequestReg" name="varRec1"/>
    </variables>
    <flow name="MergedFlow">
        <links>
            <link name="RequestRegTOReceiveFromAirlinehzQK"/>
            <link name="RequestReg1TOReceiveFromAirline1gAFo"/>
        </links>
        <scope exitOnStandardFault="yes" name="Scope_Lufthansa" suppressJoinFailure="yes">
            <variables>
                <variable name="AirlineInput"/>
                <variable messageType="ns:RequestReg" name="varInv2"/>
                <variable messageType="ns:AirlineResponseMessage" name="output"/>
            </variables>
            <partnerLinks>
                <partnerLink initializePartnerRole="no"
                    myRole="AirlineProvider" name="client"
                    partnerLinkType="ns:Airline" partnerRole="AirlineRequester"/>
            </partnerLinks>
            <faultHandlers>
                <catchAll>
                    <compensate/>
                </catchAll>
            </faultHandlers>
            <flow name="main">
                <links>
                    <link name="Link2"/>
                    <link name="InvokeToEmpty"/>
                </links>
                <receive createInstance="yes" name="receive" variable="AirlineInput">
                    <sources>
                        <source linkName="Link2"/>
                    </sources>
                </receive>
                <assign name="RequestReg" validate="no">
                    <targets>
                        <target linkName="Link2"/>
                    </targets>
                    <sources>
                        <source linkName="InvokeToEmpty"/>
                        <source linkName="RequestRegTOReceiveFromAirlinehzQK"/>
                    </sources>
                    <copy>
                        <from variable="varInv2"/>
                        <to variable="varRec1"/>
                    </copy>
                </assign>
                <empty name="Empty">
                    <targets>
                        <target linkName="InvokeToEmpty"/>
                    </targets>
                </empty>
            </flow>
        </scope>
        <scope exitOnStandardFault="yes" name="Scope_Agency" suppressJoinFailure="yes">
            <variables>
                <variable messageType="ns:AgencyRequestMessage" name="input"/>
                <variable messageType="ns:AgencyResponseMessage" name="output"/>
            </variables>
            <partnerLinks>
                <partnerLink initializePartnerRole="no"
                    myRole="AgencyProvider" name="client"
                    partnerLinkType="ns:Agency" partnerRole="AgencyRequester"/>
            </partnerLinks>
            <faultHandlers>
                <catchAll>
                    <compensate/>
                </catchAll>
            </faultHandlers>
            <flow name="main">
                <links>
                    <link name="Link1"/>
                </links>
                <receive createInstance="yes" name="receive" variable="input">
                    <sources>
                        <source linkName="Link1"/>
                    </sources>
                </receive>
                <flow name="AgencyForEach_UnrolledLoop">
                    <targets>
                        <target linkName="Link1"/>
                    </targets>
                    <links/>
                    <scope exitOnStandardFault="no" isolated="no" name="ForEachScope">
                        <flow name="ForEachFlow">
                            <empty name="Empty">
                                <targets>
                                    <joinCondition><![CDATA[($RequestRegTOReceiveFromAirlinehzQK)]]></joinCondition>
                                    <target linkName="RequestRegTOReceiveFromAirlinehzQK"/>
                                </targets>
                            </empty>
                        </flow>
                    </scope>
                    <scope exitOnStandardFault="no" isolated="no" name="ForEachScope1">
                        <flow name="ForEachFlow">
                            <empty name="Empty">
                                <targets>
                                    <joinCondition><![CDATA[($RequestReg1TOReceiveFromAirline1gAFo)]]></joinCondition>
                                    <target linkName="RequestReg1TOReceiveFromAirline1gAFo"/>
                                </targets>
                            </empty>
                        </flow>
                    </scope>
                </flow>
            </flow>
        </scope>
        <scope exitOnStandardFault="yes" name="Scope_Emirates" suppressJoinFailure="yes">
            <variables>
                <variable messageType="ns:AirlineResponseMessage" name="output"/>
                <variable name="Emirates_AirlineInput"/>
                <variable messageType="ns:RequestReg" name="Emirates_varInv2"/>
            </variables>
            <partnerLinks>
                <partnerLink initializePartnerRole="no"
                    myRole="AirlineProvider" name="client"
                    partnerLinkType="ns:Airline" partnerRole="AirlineRequester"/>
            </partnerLinks>
            <faultHandlers>
                <catchAll>
                    <compensate/>
                </catchAll>
            </faultHandlers>
            <flow name="main">
                <links>
                    <link name="Link2"/>
                    <link name="InvokeToEmpty"/>
                </links>
                <receive createInstance="yes" name="receive" variable="Emirates_AirlineInput">
                    <sources>
                        <source linkName="Link2"/>
                    </sources>
                </receive>
                <assign name="RequestReg1" validate="no">
                    <targets>
                        <target linkName="Link2"/>
                    </targets>
                    <sources>
                        <source linkName="InvokeToEmpty"/>
                        <source linkName="RequestReg1TOReceiveFromAirline1gAFo"/>
                    </sources>
                    <copy>
                        <from variable="Emirates_varInv2"/>
                        <to variable="varRec1"/>
                    </copy>
                </assign>
                <empty name="Empty">
                    <targets>
                        <target linkName="InvokeToEmpty"/>
                    </targets>
                </empty>
            </flow>
        </scope>
    </flow>
</process>
